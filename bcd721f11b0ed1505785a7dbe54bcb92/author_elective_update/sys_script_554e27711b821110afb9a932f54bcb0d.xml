<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="DELETE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_g_cd3_learning_lms_incident</collection>
        <condition>gs.getProperty("com.snc.incident.incident_task.closure") == "true"</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_g_cd3_learning_lms_incident">stateCHANGESTO7^ORstateCHANGESTO8^EQ<item display_value="Closed Skipped" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="7"/>
            <item display_value="8" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="true" value="8"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Cascade closure of Incident Tasks</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous) {

	var incidentSysId = current.sys_id;
	var incDisplayValue = current.getDisplayValue();
	var incTaskGrDefault = new GlideRecord("incident_task");
	incTaskGrDefault.newRecord();
	var taskStateUtil = new TaskStateUtil(incTaskGrDefault);
	var INACTIVE_STATES = taskStateUtil.getInactiveStates() || taskStateUtil.SYSTEM_INACTIVE_STATES;
	var incTaskGr = new GlideRecord("incident_task");
	incTaskGr.addActiveQuery();
	incTaskGr.addQuery("incident", incidentSysId);
	incTaskGr.addQuery("state", "NOT IN", INACTIVE_STATES);
	incTaskGr.query();
	if(current.state == IncidentState.CLOSED)
		closeOpenIncidentTasks();
	else if(current.state == IncidentState.CANCELED)
		cancelOpenIncidentTasks();

	function closeOpenIncidentTasks() {
		var CLOSED_INCOMPLETE_STATE = 4;
		while(incTaskGr.next()) {
			incTaskGr.work_notes = gs.getMessage("Incident Task is Closed Incomplete based on closure of {0}.", incDisplayValue);
			incTaskGr.setValue("state", CLOSED_INCOMPLETE_STATE);
			incTaskGr.update();
		}
	}

	function cancelOpenIncidentTasks() {
		var CLOSED_SKIPPED_STATE = 7;
		while(incTaskGr.next()) {
			incTaskGr.work_notes = gs.getMessage("Incident Task is Closed Skipped based on cancelation of {0}.", incDisplayValue);
			incTaskGr.setValue("state", CLOSED_SKIPPED_STATE);
			incTaskGr.update();
		}
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-01-03 07:34:11</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>554e27711b821110afb9a932f54bcb0d</sys_id>
        <sys_mod_count>15</sys_mod_count>
        <sys_name>Cascade closure of Incident Tasks</sys_name>
        <sys_overrides/>
        <sys_package display_value="Incident" source="com.snc.incident">8c2672421bd233000b8cca661a4bcbb5</sys_package>
        <sys_policy/>
        <sys_scope display_value="Learning Management System Incident">bcd721f11b0ed1505785a7dbe54bcb92</sys_scope>
        <sys_update_name>sys_script_554e27711b821110afb9a932f54bcb0d</sys_update_name>
        <sys_updated_by>Richard.Duong@dss.ca.gov</sys_updated_by>
        <sys_updated_on>2022-09-22 00:21:16</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="DELETE" query="documentkey=554e27711b821110afb9a932f54bcb0d"/>
    <sys_update_version action="INSERT_OR_UPDATE">
        <action>DELETE</action>
        <application display_value="Learning Management System Incident">bcd721f11b0ed1505785a7dbe54bcb92</application>
        <file_path/>
        <instance_id>7cc0d806dbe5dc1077e0b16a329619ae</instance_id>
        <instance_name>cdssdev</instance_name>
        <name>sys_script_554e27711b821110afb9a932f54bcb0d</name>
        <payload>&lt;?xml version="1.0" encoding="UTF-8"?&gt;&lt;record_update sys_domain="global" table="sys_script"&gt;&lt;sys_script action="INSERT_OR_UPDATE"&gt;&lt;abort_action&gt;false&lt;/abort_action&gt;&lt;access&gt;package_private&lt;/access&gt;&lt;action_delete&gt;false&lt;/action_delete&gt;&lt;action_insert&gt;true&lt;/action_insert&gt;&lt;action_query&gt;false&lt;/action_query&gt;&lt;action_update&gt;true&lt;/action_update&gt;&lt;active&gt;true&lt;/active&gt;&lt;add_message&gt;false&lt;/add_message&gt;&lt;advanced&gt;true&lt;/advanced&gt;&lt;change_fields&gt;false&lt;/change_fields&gt;&lt;client_callable&gt;false&lt;/client_callable&gt;&lt;collection&gt;x_g_cd3_learning_lms_incident&lt;/collection&gt;&lt;condition&gt;gs.getProperty("com.snc.incident.incident_task.closure") == "true"&lt;/condition&gt;&lt;description/&gt;&lt;execute_function&gt;false&lt;/execute_function&gt;&lt;filter_condition table="x_g_cd3_learning_lms_incident"&gt;stateCHANGESTO7^ORstateCHANGESTO8^EQ&lt;item display_value="Closed Skipped" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="7"/&gt;&lt;item display_value="8" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="true" value="8"/&gt;&lt;item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/&gt;&lt;/filter_condition&gt;&lt;is_rest&gt;false&lt;/is_rest&gt;&lt;message/&gt;&lt;name&gt;Cascade closure of Incident Tasks&lt;/name&gt;&lt;order&gt;100&lt;/order&gt;&lt;priority&gt;100&lt;/priority&gt;&lt;rest_method/&gt;&lt;rest_method_text/&gt;&lt;rest_service/&gt;&lt;rest_service_text/&gt;&lt;rest_variables/&gt;&lt;role_conditions/&gt;&lt;script&gt;&lt;![CDATA[(function executeRule(current, previous) {

	var incidentSysId = current.sys_id;
	var incDisplayValue = current.getDisplayValue();
	var incTaskGrDefault = new GlideRecord("incident_task");
	incTaskGrDefault.newRecord();
	var taskStateUtil = new TaskStateUtil(incTaskGrDefault);
	var INACTIVE_STATES = taskStateUtil.getInactiveStates() || taskStateUtil.SYSTEM_INACTIVE_STATES;
	var incTaskGr = new GlideRecord("incident_task");
	incTaskGr.addActiveQuery();
	incTaskGr.addQuery("incident", incidentSysId);
	incTaskGr.addQuery("state", "NOT IN", INACTIVE_STATES);
	incTaskGr.query();
	if(current.state == IncidentState.CLOSED)
		closeOpenIncidentTasks();
	else if(current.state == IncidentState.CANCELED)
		cancelOpenIncidentTasks();

	function closeOpenIncidentTasks() {
		var CLOSED_INCOMPLETE_STATE = 4;
		while(incTaskGr.next()) {
			incTaskGr.work_notes = gs.getMessage("Incident Task is Closed Incomplete based on closure of {0}.", incDisplayValue);
			incTaskGr.setValue("state", CLOSED_INCOMPLETE_STATE);
			incTaskGr.update();
		}
	}

	function cancelOpenIncidentTasks() {
		var CLOSED_SKIPPED_STATE = 7;
		while(incTaskGr.next()) {
			incTaskGr.work_notes = gs.getMessage("Incident Task is Closed Skipped based on cancelation of {0}.", incDisplayValue);
			incTaskGr.setValue("state", CLOSED_SKIPPED_STATE);
			incTaskGr.update();
		}
	}

})(current, previous);]]&gt;&lt;/script&gt;&lt;sys_class_name&gt;sys_script&lt;/sys_class_name&gt;&lt;sys_created_by&gt;admin&lt;/sys_created_by&gt;&lt;sys_created_on&gt;2018-01-03 07:34:11&lt;/sys_created_on&gt;&lt;sys_domain&gt;global&lt;/sys_domain&gt;&lt;sys_domain_path&gt;/&lt;/sys_domain_path&gt;&lt;sys_id&gt;554e27711b821110afb9a932f54bcb0d&lt;/sys_id&gt;&lt;sys_mod_count&gt;15&lt;/sys_mod_count&gt;&lt;sys_name&gt;Cascade closure of Incident Tasks&lt;/sys_name&gt;&lt;sys_overrides/&gt;&lt;sys_package display_value="Incident" source="com.snc.incident"&gt;8c2672421bd233000b8cca661a4bcbb5&lt;/sys_package&gt;&lt;sys_policy/&gt;&lt;sys_scope display_value="Learning Management System Incident"&gt;bcd721f11b0ed1505785a7dbe54bcb92&lt;/sys_scope&gt;&lt;sys_update_name&gt;sys_script_554e27711b821110afb9a932f54bcb0d&lt;/sys_update_name&gt;&lt;sys_updated_by&gt;Richard.Duong@dss.ca.gov&lt;/sys_updated_by&gt;&lt;sys_updated_on&gt;2022-09-22 00:21:16&lt;/sys_updated_on&gt;&lt;template/&gt;&lt;when&gt;after&lt;/when&gt;&lt;/sys_script&gt;&lt;sys_translated_text action="delete_multiple" query="documentkey=554e27711b821110afb9a932f54bcb0d"/&gt;&lt;/record_update&gt;</payload>
        <payload_hash>-1381008756</payload_hash>
        <record_name>Cascade closure of Incident Tasks</record_name>
        <reverted_from/>
        <source>549e067d1bc659581d39657ce54bcb59</source>
        <source_table>sys_update_set</source_table>
        <state>previous</state>
        <sys_created_by>Richard.Duong@dss.ca.gov</sys_created_by>
        <sys_created_on>2022-09-22 00:21:16</sys_created_on>
        <sys_id>059c27ca1bc25110afb9a932f54bcb68</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_recorded_at>1836291f5be0000001</sys_recorded_at>
        <sys_updated_by>Richard.Duong@dss.ca.gov</sys_updated_by>
        <sys_updated_on>2022-09-22 00:21:16</sys_updated_on>
        <type>Business Rule</type>
        <update_guid>c99c27ca7ac251108eadbf0ee457bf67</update_guid>
        <update_guid_history>c99c27ca7ac251108eadbf0ee457bf67:-1381008756,b321f33518821110ca68c65fc3ccfaec:1305034681</update_guid_history>
    </sys_update_version>
    <sys_metadata_delete action="INSERT_OR_UPDATE">
        <sys_audit_delete/>
        <sys_class_name>sys_metadata_delete</sys_class_name>
        <sys_created_by>Richard.Duong@dss.ca.gov</sys_created_by>
        <sys_created_on>2022-09-22 01:32:06</sys_created_on>
        <sys_db_object display_value="" name="sys_script">sys_script</sys_db_object>
        <sys_id>06cb3e4146ef4ac8805cb6cde7afb824</sys_id>
        <sys_metadata>554e27711b821110afb9a932f54bcb0d</sys_metadata>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>Cascade closure of Incident Tasks</sys_name>
        <sys_package display_value="Incident" source="com.snc.incident">8c2672421bd233000b8cca661a4bcbb5</sys_package>
        <sys_parent display_value="LMS Incident">199c0e3d1bc659581d39657ce54bcbf5</sys_parent>
        <sys_policy/>
        <sys_scope display_value="Learning Management System Incident">bcd721f11b0ed1505785a7dbe54bcb92</sys_scope>
        <sys_scope_delete display_value="">68db4914e75246009aab1510a9440000</sys_scope_delete>
        <sys_update_name>sys_script_554e27711b821110afb9a932f54bcb0d</sys_update_name>
        <sys_update_version display_value="sys_script_554e27711b821110afb9a932f54bcb0d">059c27ca1bc25110afb9a932f54bcb68</sys_update_version>
        <sys_updated_by>Richard.Duong@dss.ca.gov</sys_updated_by>
        <sys_updated_on>2022-09-22 01:32:06</sys_updated_on>
    </sys_metadata_delete>
</record_update>
