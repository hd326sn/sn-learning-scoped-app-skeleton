<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="bcd721f11b0ed1505785a7dbe54bcb92" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>false</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_g_cd3_learning_lms_incident</collection>
        <condition>current.isValidRecord() &amp;&amp; (current.incident_state.changes() || (current.incident_state == global.IncidentState.ON_HOLD &amp;&amp; current.hold_reason.changes())) &amp;&amp; (current.child_incidents &gt; 0)</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>LMS Sync Child Incident State</name>
        <order>1000</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[synchChildIncidents();

function synchChildIncidents() {
	var updateChildState = false;
	var updateOnHoldReason = false;
	var ON_HOLD_REASON_AWAITING_CALLER = 1;
	if ((current.incident_state.changes() && current.incident_state != global.IncidentState.RESOLVED && current.incident_state !=
			global.IncidentState.CLOSED && current.incident_state != global.IncidentState.CANCELED &&
			!(current.incident_state == global.IncidentState.ON_HOLD && current.hold_reason == ON_HOLD_REASON_AWAITING_CALLER)
		) ||
		(current.incident_state == global.IncidentState.ON_HOLD && current.hold_reason != ON_HOLD_REASON_AWAITING_CALLER)) {
		updateChildState = true;
	}
	if (current.incident_state == global.IncidentState.ON_HOLD && current.hold_reason && current.hold_reason.changes() &&
		current.hold_reason != ON_HOLD_REASON_AWAITING_CALLER) {
		updateOnHoldReason = true;
	}
	if (updateChildState || updateOnHoldReason)
		updateChildIncidents(updateChildState, updateOnHoldReason);
}

function updateChildIncidents(updateChildState, updateOnHoldReason) {
	var gr = new GlideRecord("x_g_cd3_learning_lms_incident");
	gr.addQuery("parent_incident", current.sys_id);
	var lastReopenedBy = gs.getUser().getUserByID(current.reopened_by);
	if (!lastReopenedBy.hasRole("x_g_cd3_learning.itil,sn_incident_write"))
		gr.addQuery("incident_state", "!=", global.IncidentState.RESOLVED);
	gr.addQuery("incident_state", "!=", global.IncidentState.CLOSED);
	gr.addQuery("incident_state", "!=", global.IncidentState.CANCELED);
	var qc = gr.addQuery("incident_state", "!=", current.incident_state);
	if(updateOnHoldReason)
		qc.addOrCondition('hold_reason', "!=", current.hold_reason);

	gr.addActiveQuery();
	gr.query();
	if (updateChildState) {
		gr.setValue("incident_state", current.incident_state);
		gr.setValue("state", current.state);
	}
	if (updateOnHoldReason)
		gr.setValue("hold_reason", current.hold_reason);
	gr.updateMultiple();
}]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-07-04 08:11:39</sys_created_on>
        <sys_domain>bcd721f11b0ed1505785a7dbe54bcb92</sys_domain>
        <sys_domain_path/>
        <sys_id>b8dd82801b5e1910afb9a932f54bcb29</sys_id>
        <sys_mod_count>65</sys_mod_count>
        <sys_name>LMS Sync Child Incident State</sys_name>
        <sys_overrides/>
        <sys_package display_value="Incident Management Best Practice - Kingston" source="com.snc.best_practice.incident.kingston">a968764a1b1633000b8cca661a4bcb54</sys_package>
        <sys_policy/>
        <sys_scope display_value="Learning Management System Incident">bcd721f11b0ed1505785a7dbe54bcb92</sys_scope>
        <sys_update_name>sys_script_eb8fa5b00b3332001604628393673a96</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2019-05-29 10:57:17</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=b8dd82801b5e1910afb9a932f54bcb29"/>
</record_update>
