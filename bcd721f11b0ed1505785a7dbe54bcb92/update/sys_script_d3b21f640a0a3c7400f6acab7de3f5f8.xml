<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="bcd721f11b0ed1505785a7dbe54bcb92" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_g_cd3_learning_lms_incident</collection>
        <condition>current.incident_state == IncidentState.RESOLVED  || current.incident_state == IncidentState.CLOSED</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>LMS mark_resolved</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[setResolutionFields();

function setResolutionFields() {
   if (current.resolved_by.nil())
      current.resolved_by = gs.getUserID();
   if (current.resolved_at.nil())
      current.resolved_at = gs.nowDateTime();
   
   // Update the fields that indicate the time and duration of this incident from open to resolve.
   // Keep track of duration as a glide_duration value (dd hh:mm:ss) and as a pure number of seconds.
   // Both calendar time and business time are maintained.
   
   var dataChange = current.opened_at.changes() || current.resolved_at.changes();
   var opened = current.opened_at.getDisplayValue();
   var resolved = current.resolved_at.getDisplayValue();

   if (dataChange || current.business_duration.nil())
      current.business_duration = gs.calDateDiff(opened, resolved, false);
   
   if (dataChange || current.business_stc.nil())
      current.business_stc = gs.calDateDiff(opened, resolved, true);
   
   if (dataChange || current.calendar_duration.nil())
      current.calendar_duration = gs.dateDiff(opened, resolved, false);
   
   if (dataChange || current.calendar_stc.nil())
      current.calendar_stc = gs.dateDiff(opened, resolved, true);
}]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2010-09-02 18:25:20</sys_created_on>
        <sys_domain>bcd721f11b0ed1505785a7dbe54bcb92</sys_domain>
        <sys_domain_path/>
        <sys_id>f852a4631b869510afb9a932f54bcb89</sys_id>
        <sys_mod_count>6</sys_mod_count>
        <sys_name>LMS mark_resolved</sys_name>
        <sys_overrides/>
        <sys_package display_value="Incident Resolution Fields" source="com.snc.incident_resolution_fields">d337ba4e1bd233000b8cca661a4bcb8c</sys_package>
        <sys_policy/>
        <sys_scope display_value="Learning Management System Incident">bcd721f11b0ed1505785a7dbe54bcb92</sys_scope>
        <sys_update_name>sys_script_d3b21f640a0a3c7400f6acab7de3f5f8</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2015-11-13 13:50:02</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=f852a4631b869510afb9a932f54bcb89"/>
</record_update>
