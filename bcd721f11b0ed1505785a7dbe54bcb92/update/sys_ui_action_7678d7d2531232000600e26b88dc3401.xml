<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="bcd721f11b0ed1505785a7dbe54bcb92" table="sys_ui_action">
    <sys_ui_action action="INSERT_OR_UPDATE">
        <action_name>copy_incident</action_name>
        <active>true</active>
        <client>true</client>
        <client_script_v2><![CDATA[function onClick(g_form) {
    getMessages(["Copy Incident", "Caller", "Failed to copy Incident."], onCopy);

    function onCopy(tMsgs) {
        var fields = [];
        fields.push({
            type: 'reference',
            name: 'caller_id',
            label: tMsgs["Caller"],
            mandatory: true,
            reference: 'sys_user',
            referringTable: 'incident',
            referringRecordId: g_form.getUniqueValue()
        });

        g_modal.showFields({
            title: tMsgs["Copy Incident"],
            fields: fields
        }).then(function(fieldValues) {
            var updatedFields = {};
            fieldValues.updatedFields.forEach(function(field) {
                updatedFields[field.name] = field.value;
            });
            var ga = new GlideAjax('IncidentUtils2');
            ga.addParam('sysparm_name', 'makeIncidentCopy');
            ga.addParam('sysparm_sys_id', g_form.getUniqueValue());
            ga.addParam('sysparm_fields', JSON.stringify(updatedFields));
            ga.getXMLAnswer(function(response) {
                if (response + '' !== "false")
                    g_aw.openRecord("incident", response + "");
                else
                    g_form.addErrorMessage(tMsgs["Failed to copy Incident."]);
            });
        });
    }
}]]></client_script_v2>
        <comments/>
        <condition>IncidentUtils.isCopyIncidentEnabled() &amp;&amp; ( gs.hasRole('x_g_cd3_learning.itil,sn_incident_write') || current.caller_id == gs.getUserID() )</condition>
        <form_action>true</form_action>
        <form_button>false</form_button>
        <form_button_v2>false</form_button_v2>
        <form_context_menu>true</form_context_menu>
        <form_link>false</form_link>
        <form_menu_button_v2>true</form_menu_button_v2>
        <form_style/>
        <hint/>
        <isolate_script>false</isolate_script>
        <list_action>false</list_action>
        <list_banner_button>false</list_banner_button>
        <list_button>false</list_button>
        <list_choice>false</list_choice>
        <list_context_menu>false</list_context_menu>
        <list_link>false</list_link>
        <list_save_with_form_button>false</list_save_with_form_button>
        <list_style/>
        <messages/>
        <name>LMS Copy Incident</name>
        <onclick>OnCopyIncidentClick()</onclick>
        <order>100</order>
        <script><![CDATA[function OnCopyIncidentClick(){
	var srcSysId = g_form.getUniqueValue();
	var ga = new GlideAjax('IncidentUtils2');
	ga.addParam('sysparm_name', 'getIncidentQueryParams');
	ga.addParam('sysparm_src_sysid', srcSysId);
	ga.addParam('sysparm_ui_action', "copy_incident");
	ga.setWantSessionMessages(true);
	ga.getXMLAnswer(function(queryParam){
		if (queryParam) {
			var ck;
			if (typeof g_ck != 'undefined' && g_ck != "")
				ck = g_ck;

			var gotoUrl = [];
			gotoUrl.push('srcSysID=' + srcSysId);
			gotoUrl.push('newSysID=$sys_id');
			gotoUrl.push('sysparm_returned_action=$action');
			gotoUrl.push('sysparm_ui_action=copy_incident');
			if (ck)
				gotoUrl.push('sysparm_ck=' + ck);

			gotoUrl = 'CopyIncidentRelatedLists.do?' + gotoUrl.join('&');

			var form = cel('form', document.body);
			hide(form);
			form.method = "POST";
			form.action = g_form.getTableName() + ".do";
			if (ck)
				addParam(form, 'sysparm_ck', g_ck);
			addParam(form, 'sys_id', '-1');
			addParam(form, 'sysparm_query', queryParam);
			addParam(form, 'sysparm_goto_url', gotoUrl);
			form.submit();
		}else{
			g_form.addErrorMessage("Failed to copy incident");
		}
	});
}
function addParam(form, name, val) {
	var inp = cel('textarea', form);
	inp.name = name;
	inp.value = val;
}]]></script>
        <show_insert>false</show_insert>
        <show_multiple_update>false</show_multiple_update>
        <show_query>false</show_query>
        <show_update>true</show_update>
        <sys_class_name>sys_ui_action</sys_class_name>
        <sys_created_by>naveen.aechan</sys_created_by>
        <sys_created_on>2017-04-25 18:07:16</sys_created_on>
        <sys_domain>bcd721f11b0ed1505785a7dbe54bcb92</sys_domain>
        <sys_domain_path/>
        <sys_id>02f589671b0a9510afb9a932f54bcb26</sys_id>
        <sys_mod_count>36</sys_mod_count>
        <sys_name>LMS Copy Incident</sys_name>
        <sys_overrides/>
        <sys_package display_value="Incident" source="com.snc.incident">8c2672421bd233000b8cca661a4bcbb5</sys_package>
        <sys_policy/>
        <sys_scope display_value="Learning Management System Incident">bcd721f11b0ed1505785a7dbe54bcb92</sys_scope>
        <sys_update_name>sys_ui_action_7678d7d2531232000600e26b88dc3401</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2020-04-15 06:35:05</sys_updated_on>
        <table>x_g_cd3_learning_lms_incident</table>
        <ui11_compatible>false</ui11_compatible>
        <ui16_compatible>false</ui16_compatible>
    </sys_ui_action>
</record_update>
