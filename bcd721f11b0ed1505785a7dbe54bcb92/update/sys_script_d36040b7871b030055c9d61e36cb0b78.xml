<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="bcd721f11b0ed1505785a7dbe54bcb92" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_g_cd3_learning_lms_incident</collection>
        <condition>gs.getProperty("com.snc.incident.incident_task.closure") == "true"</condition>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_g_cd3_learning_lms_incident">stateCHANGESTO7^ORstateCHANGESTO8^EQ<item display_value="Closed Skipped" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="false" value="7"/>
            <item display_value="8" endquery="false" field="state" goto="false" newquery="false" operator="CHANGESTO" or="true" value="8"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>LMS Cascade closure of Incident Tasks</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous) {

	var incidentSysId = current.sys_id;
	var incDisplayValue = current.getDisplayValue();
	var incTaskGrDefault = new GlideRecord("incident_task");
	incTaskGrDefault.newRecord();
	var taskStateUtil = new TaskStateUtil(incTaskGrDefault);
	var INACTIVE_STATES = taskStateUtil.getInactiveStates() || taskStateUtil.SYSTEM_INACTIVE_STATES;
	var incTaskGr = new GlideRecord("incident_task");
	incTaskGr.addActiveQuery();
	incTaskGr.addQuery("x_g_cd3_learning_lms_incident", incidentSysId);
	incTaskGr.addQuery("state", "NOT IN", INACTIVE_STATES);
	incTaskGr.query();
	if(current.state == IncidentState.CLOSED)
		closeOpenIncidentTasks();
	else if(current.state == IncidentState.CANCELED)
		cancelOpenIncidentTasks();

	function closeOpenIncidentTasks() {
		var CLOSED_INCOMPLETE_STATE = 4;
		while(incTaskGr.next()) {
			incTaskGr.work_notes = gs.getMessage("LMS Incident Task is Closed Incomplete based on closure of {0}.", incDisplayValue);
			incTaskGr.setValue("state", CLOSED_INCOMPLETE_STATE);
			incTaskGr.update();
		}
	}

	function cancelOpenIncidentTasks() {
		var CLOSED_SKIPPED_STATE = 7;
		while(incTaskGr.next()) {
			incTaskGr.work_notes = gs.getMessage("LMS Incident Task is Closed Skipped based on cancelation of {0}.", incDisplayValue);
			incTaskGr.setValue("state", CLOSED_SKIPPED_STATE);
			incTaskGr.update();
		}
	}

})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-01-03 07:34:11</sys_created_on>
        <sys_domain>bcd721f11b0ed1505785a7dbe54bcb92</sys_domain>
        <sys_domain_path/>
        <sys_id>6c52a4631b869510afb9a932f54bcb4c</sys_id>
        <sys_mod_count>14</sys_mod_count>
        <sys_name>LMS Cascade closure of Incident Tasks</sys_name>
        <sys_overrides/>
        <sys_package display_value="Incident" source="com.snc.incident">8c2672421bd233000b8cca661a4bcbb5</sys_package>
        <sys_policy/>
        <sys_scope display_value="Learning Management System Incident">bcd721f11b0ed1505785a7dbe54bcb92</sys_scope>
        <sys_update_name>sys_script_d36040b7871b030055c9d61e36cb0b78</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-01-17 09:29:00</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=6c52a4631b869510afb9a932f54bcb4c"/>
</record_update>
